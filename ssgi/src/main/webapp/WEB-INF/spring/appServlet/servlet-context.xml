<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/html/**" location="/resources/html/" />
	<resources mapping="/style/**" location="/resources/style/" />
	<resources mapping="/js/**" location="/resources/js/" />
	<resources mapping="/images/**" location="/resources/images/" />
	<resources mapping="/upload/**" location="/upload/" />
	<resources mapping="/sUpload/**" location="/sUpload/" />
	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	
		<beans:bean name="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" >
	<beans:property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
	<beans:property name="url" value="jdbc:oracle:thin:@localhost:1521:xe" />
	<beans:property name="username" value="ssgi" />
	<beans:property name="password" value="ssgi" />
</beans:bean>
	


	<!-- mybatis는 SqlSessionFactoryBean 클래스와 SqlSesstionTemplate크랠스의 객체를 이용하여 sql 처리 -->
<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	<beans:property name="dataSource" ref="dataSource"></beans:property>
	<beans:property name="mapperLocations" value="classpath:com\woo\ssgi\mapper\*.xml"></beans:property>
</beans:bean>
	
<!-- Sql처리에 필요한 모든 메서드를 가지고 있는 객체 -->
<beans:bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
<beans:constructor-arg index="0" ref="sqlSessionFactory"></beans:constructor-arg>
</beans:bean>


<!-- 프로젝트에 사용하는 dao 클래스 객체 bean -->
<beans:bean name="QNAdao" class="com.woo.ssgi.dao.QNADAO" >
</beans:bean>
<beans:bean name="Noticedao" class="com.woo.ssgi.dao.NoticeDAO" >
</beans:bean>


	
	<!-- 프로젝트에 사용하는 dao 클래스 객체 bean -->
	<beans:bean name="dao" class="com.woo.ssgi.dao.UserDao" >
	
	</beans:bean>	
	
	
	
	
	<!-- file upload할 때에 -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- max upload size in bytes -->
		<beans:property name="maxUploadSize" value="10485760" /> <!-- 10MB -->
		<!-- max size of file in memory(in bytes) -->
		<beans:property name="maxInMemorySize" value="1048576" /> <!-- 1MB -->
	</beans:bean>
	
	<beans:bean name="gDao" class="com.woo.ssgi.dao.GoodsDao" >
	</beans:bean>
	
	<beans:bean name="shDao" class="com.woo.ssgi.dao.ShDao" >
	</beans:bean>
	
	<beans:bean name="stDao" class="com.woo.ssgi.dao.StDao" >
	</beans:bean>
	
	
	

	
	
	<context:component-scan base-package="com.woo.ssgi" />
	
	
	
</beans:beans>
